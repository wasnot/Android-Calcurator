
package net.wasnot.android.calculator.realm;

import net.wasnot.android.calculator.R;
import io.realm.RealmObject;
import io.realm.annotations.Ignore;

/**
 * Created by akihiroaida on 15/06/02.
 */
public class CalculateSolution extends RealmObject {
    @Ignore
    public static final int ACTION_UNKNOWN = -1;
    @Ignore
    public static final int ACTION_ADD = 0;
    @Ignore
    public static final int ACTION_SUBTRACT = 1;
    @Ignore
    public static final int ACTION_MULTIPLY = 2;
    @Ignore
    public static final int ACTION_DIVIDE = 3;

    private long timestamp;
    private String targetTerm;
    private String givenTerm;
    private String solution;
    private int action;

    // Standard getters & setters generated by your IDEâ€¦

    public int getAction() {
        return action;
    }

    public void setAction(int action) {
        this.action = action;
    }

    public String getGivenTerm() {
        return givenTerm;
    }

    public void setGivenTerm(String givenTerm) {
        this.givenTerm = givenTerm;
    }

    public String getSolution() {
        return solution;
    }

    public void setSolution(String solution) {
        this.solution = solution;
    }

    public String getTargetTerm() {
        return targetTerm;
    }

    public void setTargetTerm(String targetTerm) {
        this.targetTerm = targetTerm;
    }

    public long getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(long timestamp) {
        this.timestamp = timestamp;
    }

    public static int getActionId(CalculateSolution solution) {
        switch (solution.action) {
            case ACTION_ADD:
                return R.id.buttonAdd;
            case ACTION_SUBTRACT:
                return R.id.buttonSubtract;
            case ACTION_MULTIPLY:
                return R.id.buttonMultiply;
            case ACTION_DIVIDE:
                return R.id.buttonDivide;
            case ACTION_UNKNOWN:
            default:
                return -1;
        }
    }

    public static void setActionById(CalculateSolution solution, int actionId) {
        switch (actionId) {
            case R.id.buttonAdd:
                solution.action = ACTION_ADD;
                break;
            case R.id.buttonSubtract:
                solution.action = ACTION_SUBTRACT;
                break;
            case R.id.buttonMultiply:
                solution.action = ACTION_MULTIPLY;
                break;
            case R.id.buttonDivide:
                solution.action = ACTION_DIVIDE;
                break;
            default:
                solution.action = ACTION_UNKNOWN;
                break;
        }
    }

}
